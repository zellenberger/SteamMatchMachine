// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Steam_Match_Machine.Models;

namespace SteamMatchMachine.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("Steam_Match_Machine.Models.GameTag", b =>
                {
                    b.Property<int>("GameTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameTagName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GameTagId");

                    b.ToTable("GameTags");

                    b.HasData(
                        new
                        {
                            GameTagId = 1,
                            GameTagName = "RPG"
                        },
                        new
                        {
                            GameTagId = 2,
                            GameTagName = "Adventure"
                        },
                        new
                        {
                            GameTagId = 3,
                            GameTagName = "Casual"
                        },
                        new
                        {
                            GameTagId = 4,
                            GameTagName = "Action"
                        },
                        new
                        {
                            GameTagId = 5,
                            GameTagName = "Open World"
                        },
                        new
                        {
                            GameTagId = 6,
                            GameTagName = "Free to Play"
                        },
                        new
                        {
                            GameTagId = 7,
                            GameTagName = "Multiplayer"
                        },
                        new
                        {
                            GameTagId = 8,
                            GameTagName = "Survival"
                        },
                        new
                        {
                            GameTagId = 9,
                            GameTagName = "Open World Survival Craft"
                        },
                        new
                        {
                            GameTagId = 10,
                            GameTagName = "Space"
                        },
                        new
                        {
                            GameTagId = 11,
                            GameTagName = "Singleplayer"
                        },
                        new
                        {
                            GameTagId = 12,
                            GameTagName = "Co-Op"
                        },
                        new
                        {
                            GameTagId = 13,
                            GameTagName = "Strategy"
                        },
                        new
                        {
                            GameTagId = 14,
                            GameTagName = "Sports"
                        },
                        new
                        {
                            GameTagId = 15,
                            GameTagName = "Violence"
                        },
                        new
                        {
                            GameTagId = 16,
                            GameTagName = "Family Friendly"
                        },
                        new
                        {
                            GameTagId = 17,
                            GameTagName = "Sci-fi"
                        },
                        new
                        {
                            GameTagId = 18,
                            GameTagName = "Fantasy"
                        },
                        new
                        {
                            GameTagId = 19,
                            GameTagName = "Medieval"
                        },
                        new
                        {
                            GameTagId = 20,
                            GameTagName = "Historical"
                        },
                        new
                        {
                            GameTagId = 21,
                            GameTagName = "Horror"
                        },
                        new
                        {
                            GameTagId = 22,
                            GameTagName = "Controller"
                        },
                        new
                        {
                            GameTagId = 23,
                            GameTagName = "VR"
                        },
                        new
                        {
                            GameTagId = 24,
                            GameTagName = "Looter Shooter"
                        },
                        new
                        {
                            GameTagId = 25,
                            GameTagName = "FPS"
                        },
                        new
                        {
                            GameTagId = 26,
                            GameTagName = "Post-apocalyptic"
                        },
                        new
                        {
                            GameTagId = 27,
                            GameTagName = "Exploration"
                        },
                        new
                        {
                            GameTagId = 28,
                            GameTagName = "No Support"
                        },
                        new
                        {
                            GameTagId = 29,
                            GameTagName = "Mature"
                        });
                });

            modelBuilder.Entity("Steam_Match_Machine.Models.GameTagVideoGame", b =>
                {
                    b.Property<int>("VideoGameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameTagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("VideoGameId", "GameTagId");

                    b.HasIndex("GameTagId");

                    b.ToTable("GameTagVideoGames");

                    b.HasData(
                        new
                        {
                            VideoGameId = 8980,
                            GameTagId = 1
                        },
                        new
                        {
                            VideoGameId = 8980,
                            GameTagId = 12
                        },
                        new
                        {
                            VideoGameId = 8980,
                            GameTagId = 4
                        },
                        new
                        {
                            VideoGameId = 8980,
                            GameTagId = 24
                        },
                        new
                        {
                            VideoGameId = 8980,
                            GameTagId = 25
                        },
                        new
                        {
                            VideoGameId = 377160,
                            GameTagId = 5
                        },
                        new
                        {
                            VideoGameId = 377160,
                            GameTagId = 1
                        },
                        new
                        {
                            VideoGameId = 377160,
                            GameTagId = 26
                        },
                        new
                        {
                            VideoGameId = 377160,
                            GameTagId = 27
                        },
                        new
                        {
                            VideoGameId = 489830,
                            GameTagId = 5
                        },
                        new
                        {
                            VideoGameId = 489830,
                            GameTagId = 1
                        },
                        new
                        {
                            VideoGameId = 489830,
                            GameTagId = 2
                        },
                        new
                        {
                            VideoGameId = 489830,
                            GameTagId = 11
                        },
                        new
                        {
                            VideoGameId = 242760,
                            GameTagId = 8
                        },
                        new
                        {
                            VideoGameId = 242760,
                            GameTagId = 9
                        },
                        new
                        {
                            VideoGameId = 242760,
                            GameTagId = 5
                        },
                        new
                        {
                            VideoGameId = 275850,
                            GameTagId = 5
                        },
                        new
                        {
                            VideoGameId = 275850,
                            GameTagId = 10
                        },
                        new
                        {
                            VideoGameId = 275850,
                            GameTagId = 9
                        },
                        new
                        {
                            VideoGameId = 275850,
                            GameTagId = 23
                        },
                        new
                        {
                            VideoGameId = 292030,
                            GameTagId = 5
                        },
                        new
                        {
                            VideoGameId = 292030,
                            GameTagId = 1
                        },
                        new
                        {
                            VideoGameId = 292030,
                            GameTagId = 11
                        },
                        new
                        {
                            VideoGameId = 292030,
                            GameTagId = 2
                        },
                        new
                        {
                            VideoGameId = 292030,
                            GameTagId = 29
                        },
                        new
                        {
                            VideoGameId = 105600,
                            GameTagId = 9
                        },
                        new
                        {
                            VideoGameId = 105600,
                            GameTagId = 8
                        },
                        new
                        {
                            VideoGameId = 105600,
                            GameTagId = 12
                        },
                        new
                        {
                            VideoGameId = 431240,
                            GameTagId = 7
                        },
                        new
                        {
                            VideoGameId = 431240,
                            GameTagId = 14
                        },
                        new
                        {
                            VideoGameId = 431240,
                            GameTagId = 16
                        },
                        new
                        {
                            VideoGameId = 1174180,
                            GameTagId = 2
                        },
                        new
                        {
                            VideoGameId = 1174180,
                            GameTagId = 4
                        },
                        new
                        {
                            VideoGameId = 1174180,
                            GameTagId = 29
                        },
                        new
                        {
                            VideoGameId = 1174180,
                            GameTagId = 11
                        },
                        new
                        {
                            VideoGameId = 271590,
                            GameTagId = 5
                        },
                        new
                        {
                            VideoGameId = 271590,
                            GameTagId = 7
                        },
                        new
                        {
                            VideoGameId = 271590,
                            GameTagId = 29
                        },
                        new
                        {
                            VideoGameId = 271590,
                            GameTagId = 4
                        },
                        new
                        {
                            VideoGameId = 470220,
                            GameTagId = 3
                        },
                        new
                        {
                            VideoGameId = 470220,
                            GameTagId = 7
                        },
                        new
                        {
                            VideoGameId = 470220,
                            GameTagId = 16
                        },
                        new
                        {
                            VideoGameId = 374320,
                            GameTagId = 7
                        },
                        new
                        {
                            VideoGameId = 374320,
                            GameTagId = 1
                        },
                        new
                        {
                            VideoGameId = 1245950,
                            GameTagId = 23
                        },
                        new
                        {
                            VideoGameId = 1245950,
                            GameTagId = 19
                        },
                        new
                        {
                            VideoGameId = 812140,
                            GameTagId = 20
                        },
                        new
                        {
                            VideoGameId = 812140,
                            GameTagId = 11
                        },
                        new
                        {
                            VideoGameId = 812140,
                            GameTagId = 22
                        });
                });

            modelBuilder.Entity("Steam_Match_Machine.Models.QuizAnswer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Answer")
                        .HasColumnType("TEXT");

                    b.HasKey("AnswerId");

                    b.ToTable("QuizAnswers");

                    b.HasData(
                        new
                        {
                            AnswerId = 1,
                            Answer = "Singleplayer"
                        },
                        new
                        {
                            AnswerId = 2,
                            Answer = "Co-op"
                        },
                        new
                        {
                            AnswerId = 3,
                            Answer = "Multiplayer"
                        },
                        new
                        {
                            AnswerId = 4,
                            Answer = "Action"
                        },
                        new
                        {
                            AnswerId = 5,
                            Answer = "Adventure"
                        },
                        new
                        {
                            AnswerId = 6,
                            Answer = "RPG"
                        },
                        new
                        {
                            AnswerId = 7,
                            Answer = "Strategy"
                        },
                        new
                        {
                            AnswerId = 8,
                            Answer = "Sports"
                        },
                        new
                        {
                            AnswerId = 9,
                            Answer = "Yes"
                        },
                        new
                        {
                            AnswerId = 10,
                            Answer = "No"
                        },
                        new
                        {
                            AnswerId = 11,
                            Answer = "Sci-Fi"
                        },
                        new
                        {
                            AnswerId = 12,
                            Answer = "Fantasy"
                        },
                        new
                        {
                            AnswerId = 13,
                            Answer = "Medieval"
                        },
                        new
                        {
                            AnswerId = 14,
                            Answer = "Historical"
                        },
                        new
                        {
                            AnswerId = 15,
                            Answer = "Horror"
                        },
                        new
                        {
                            AnswerId = 16,
                            Answer = "No Support"
                        },
                        new
                        {
                            AnswerId = 17,
                            Answer = "Controller Support"
                        },
                        new
                        {
                            AnswerId = 18,
                            Answer = "VR Headset"
                        });
                });

            modelBuilder.Entity("Steam_Match_Machine.Models.QuizAnswerGameTag", b =>
                {
                    b.Property<int>("AnswerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameTagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AnswerId", "GameTagId");

                    b.HasIndex("GameTagId");

                    b.ToTable("QuizAnswerGameTags");

                    b.HasData(
                        new
                        {
                            AnswerId = 1,
                            GameTagId = 11
                        },
                        new
                        {
                            AnswerId = 2,
                            GameTagId = 12
                        },
                        new
                        {
                            AnswerId = 5,
                            GameTagId = 2
                        },
                        new
                        {
                            AnswerId = 4,
                            GameTagId = 4
                        },
                        new
                        {
                            AnswerId = 6,
                            GameTagId = 1
                        },
                        new
                        {
                            AnswerId = 3,
                            GameTagId = 7
                        },
                        new
                        {
                            AnswerId = 7,
                            GameTagId = 13
                        },
                        new
                        {
                            AnswerId = 8,
                            GameTagId = 14
                        },
                        new
                        {
                            AnswerId = 9,
                            GameTagId = 15
                        },
                        new
                        {
                            AnswerId = 9,
                            GameTagId = 29
                        },
                        new
                        {
                            AnswerId = 10,
                            GameTagId = 16
                        },
                        new
                        {
                            AnswerId = 11,
                            GameTagId = 17
                        },
                        new
                        {
                            AnswerId = 12,
                            GameTagId = 18
                        },
                        new
                        {
                            AnswerId = 13,
                            GameTagId = 19
                        },
                        new
                        {
                            AnswerId = 14,
                            GameTagId = 20
                        },
                        new
                        {
                            AnswerId = 15,
                            GameTagId = 21
                        },
                        new
                        {
                            AnswerId = 17,
                            GameTagId = 22
                        },
                        new
                        {
                            AnswerId = 18,
                            GameTagId = 23
                        },
                        new
                        {
                            AnswerId = 16,
                            GameTagId = 28
                        });
                });

            modelBuilder.Entity("Steam_Match_Machine.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Steam_Match_Machine.Models.UserQuizAnswer", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuizAnswerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "QuizAnswerId");

                    b.HasIndex("QuizAnswerId");

                    b.ToTable("UserQuizAnswers");
                });

            modelBuilder.Entity("Steam_Match_Machine.Models.UserVideoGame", b =>
                {
                    b.Property<int>("VideoGameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.HasKey("VideoGameId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserVideoGames");
                });

            modelBuilder.Entity("Steam_Match_Machine.Models.UserWishlist", b =>
                {
                    b.Property<int>("VideoGameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("VideoGameId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserWishlists");
                });

            modelBuilder.Entity("Steam_Match_Machine.Models.VideoGame", b =>
                {
                    b.Property<int>("steam_appid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductLink")
                        .HasColumnType("TEXT");

                    b.HasKey("steam_appid");

                    b.ToTable("VideoGames");

                    b.HasData(
                        new
                        {
                            steam_appid = 8980,
                            IsArchived = false
                        },
                        new
                        {
                            steam_appid = 377160,
                            IsArchived = false
                        },
                        new
                        {
                            steam_appid = 489830,
                            IsArchived = false
                        },
                        new
                        {
                            steam_appid = 1174180,
                            IsArchived = false
                        },
                        new
                        {
                            steam_appid = 271590,
                            IsArchived = false
                        },
                        new
                        {
                            steam_appid = 470220,
                            IsArchived = false
                        },
                        new
                        {
                            steam_appid = 374320,
                            IsArchived = false
                        },
                        new
                        {
                            steam_appid = 812140,
                            IsArchived = false
                        },
                        new
                        {
                            steam_appid = 292030,
                            IsArchived = false
                        },
                        new
                        {
                            steam_appid = 242760,
                            IsArchived = false
                        },
                        new
                        {
                            steam_appid = 1245950,
                            IsArchived = false
                        },
                        new
                        {
                            steam_appid = 275850,
                            IsArchived = false
                        },
                        new
                        {
                            steam_appid = 431240,
                            IsArchived = false
                        },
                        new
                        {
                            steam_appid = 105600,
                            IsArchived = false
                        });
                });

            modelBuilder.Entity("Steam_Match_Machine.Models.GameTagVideoGame", b =>
                {
                    b.HasOne("Steam_Match_Machine.Models.GameTag", "GameTag")
                        .WithMany("GameTagVideoGames")
                        .HasForeignKey("GameTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Steam_Match_Machine.Models.VideoGame", "VideoGame")
                        .WithMany("GameTagVideoGames")
                        .HasForeignKey("VideoGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Steam_Match_Machine.Models.QuizAnswerGameTag", b =>
                {
                    b.HasOne("Steam_Match_Machine.Models.QuizAnswer", "QuizAnswer")
                        .WithMany("QuizAnswerGameTags")
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Steam_Match_Machine.Models.GameTag", "GameTag")
                        .WithMany("QuizAnswerGameTags")
                        .HasForeignKey("GameTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Steam_Match_Machine.Models.UserQuizAnswer", b =>
                {
                    b.HasOne("Steam_Match_Machine.Models.QuizAnswer", "QuizAnswer")
                        .WithMany("UserQuizAnswers")
                        .HasForeignKey("QuizAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Steam_Match_Machine.Models.User", "User")
                        .WithMany("UserQuizAnswers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Steam_Match_Machine.Models.UserVideoGame", b =>
                {
                    b.HasOne("Steam_Match_Machine.Models.User", "User")
                        .WithMany("UserVideoGames")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Steam_Match_Machine.Models.VideoGame", "VideoGame")
                        .WithMany("UserVideoGames")
                        .HasForeignKey("VideoGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Steam_Match_Machine.Models.UserWishlist", b =>
                {
                    b.HasOne("Steam_Match_Machine.Models.User", "User")
                        .WithMany("UserWishlist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Steam_Match_Machine.Models.VideoGame", "VideoGame")
                        .WithMany("UserWishList")
                        .HasForeignKey("VideoGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
